# -*- coding: utf-8 -*-
import sqlite3

# 포맷팅된 내용 (blog-post-formatting-requirements.md 규칙 적용)
formatted_content = """메르님 한 줄 요약

정보이론: 엔트로피, 정보량, 채널 용량 등 이 중에 가장 중요한 한 가지를 꼽는다면, 선형대수학이다.

선형대수학은 AI 개발자를 위한 필수 수학으로 벡터, 행렬 등이 모두 녹아있다.
정보이론의 채널용량은 통신 시스템에서 오류 없이 얼마나 많은 정보를 전송할 수 있을지를 나타내는 개념이다.
채널용량은 도로의 개념과 비슷하다.
도로가 넓을수록 더 많은 차량이 통행할 수 있듯이, 채널용량도 대역폭이 넓을수록 더 많은 정보를 전송할 수 있다.
통행속도는 도로의 폭 못지않게, 신호등이나 교통혼잡 등이 영향을 미치게 된다.

채널 용량에도 잡음이라는 요소가 영향을 미친다.
잡음은 데이터의 정확성을 낮추고, 모델의 학습능력을 악화 시킨다.
데이터의 본질적인 정보를 잡음으로부터 구분하고, 정확하게 학습하는 것이 중요하다.
정보량이 늘어날수록 오류도 늘어나는데 이것을 줄이는 게 AI 최적화의 핵심이다.

다변수 함수의 미적분, 편미분 등은 다차원 데이터를 다루는 인공지능 모델의 최적화 과정에 활용된다.
벡터, 공간좌표 등 기하학적인 개념은 이미지 처리, 로보틱스, 데이터 시각화 등 인공지능의 공간 데이터를 이해하는데 필요하다.
가장 의미가 있는 정보만을 남기고, 정보손실을 최소화하는 관점에서 필요한 개념이 선형대수학이다.
선형대수는 GPU 가속화의 기반이 되고, 병렬처리로 최적화된 대규모 행렬 연산은 학습 속도를 획기적으로 향상시킨다.
머신러닝, 딥러닝과 연관된 거의 대부분의 연산이 선형대수에 기초해 있는 이유다.

인공지능에 필요한 수학은 선형대수학, 다변수 미적분학이고, 여기에 통계학이 추가된다.
확률 분포, 통계적 추론, 가설검증법 등은 불확실한 데이터로 예측 모델을 만드는 머신러닝과 인공지능의 핵심 이론적 기반 중의 하나다.
선형 대수학이 처음이라면 Gilbert Strangd의 Introduction to Linear Algebra가 시작점이 될 수 있다.
MIT OCW를 통해서 유튜브에 저자 강의가 올라와 있다.

사실, 위의 내용이 외국어 같이 어렵고 이해가 가지 않았을 것이다.
AI 관련 일로 돈을 벌기 위해서는 수학과 통계학등이 점점 중요해지고 있다는 정도로 이해하면 될 것 같다.
우리는 AI 관련 일로 돈을 버는 사람이 아니라, AI를 가끔 사용하는 유저다.
유저는 수학이나 통계학등을 공부할 필요가 없다.

AI를 사용할 때 중요한 것은 질문하는 능력과 거짓말을 가려낼 수 있는 역량이다.
AI를 써 본 사람들은 알 것이다. "질문이 얼마나 중요한지"와, "AI가 얼마나 능숙하게 거짓말을 하는지"를.
AI의 거짓말을 가려내지 못하고 AI를 활용하면, 바보가 되면서 비웃음의 대상이 될 수 있다.
요즘 ChatGPT의 답변만을 긁어서 올리는 사람들이 있다.
그런 사람을 보면 "그러면 네 생각은 뭔데?"라는 질문을 해보고 싶어진다.
"중요한 것은 내 생각과 역량이고, AI는 이것을 도와주는 보조도구로 써야한다"는 생각이다.

자기만의 생각을 할 수 있고, 거짓말을 골라내는 역량을 가지려면 폭넓게 읽고, 많이 생각해야 한다.
정답은 대부분 기초적이고 단순한 곳에 있다.

AI 시대의 의대 진학이라는 글을 쓴 적이 있다.
댓글에서 AI 시대에 어떤 학과에 가야 할지 문의하는 댓글들이 있었다.
AI 관련 직무에서 돈을 벌기 위해서는 크게 3가지 학습이 필요하다고 생각한다.

확률과 통계: 확률 분포, 통계적 추론, 가설 검증, 회귀 분석 등
선형대수와 미적분: 벡터, 행렬, 연산, 다변수 미적분 등

한줄 코멘트

AI 시대에 어떤 학과를 선택해야 할지에 대한 더 자세한 내용을 다루겠다."""

# 데이터베이스 업데이트
conn = sqlite3.connect('database.db')
cursor = conn.cursor()
cursor.execute("UPDATE blog_posts SET content = ? WHERE id = ?", (formatted_content, 1014))
conn.commit()
conn.close()

print("포스트 1014 포맷팅 완료")